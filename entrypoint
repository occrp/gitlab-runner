#!/bin/bash

#
# almost exact copy of:
# https://gitlab.com/gitlab-org/gitlab-runner/blob/master/dockerfiles/ubuntu/entrypoint
# (original is MIT-licensed)
#
# we need our copy because we want to run gitlab-runner as a specific user:group
#

# gitlab-runner data directory
DATA_DIR="/etc/gitlab-runner"
CONFIG_FILE=${CONFIG_FILE:-$DATA_DIR/config.toml}
# custom certificate authority path
CA_CERTIFICATES_PATH=${CA_CERTIFICATES_PATH:-$DATA_DIR/certs/ca.crt}
LOCAL_CA_PATH="/usr/local/share/ca-certificates/ca.crt"

update_ca() {
  echo "Updating CA certificates..."
  cp "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}"
  update-ca-certificates --fresh >/dev/null
}

if [ -f "${CA_CERTIFICATES_PATH}" ]; then
  # update the ca if the custom ca is different than the current
  cmp --silent "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}" || update_ca
fi

# if we don't have a config file...
if [[ ! -e ${CONFIG_FILE} ]]; then
  echo "+-- no config file found in: '${CONFIG_FILE}'"
  # ...but we do have config vars...
  if [[ -n ${CI_SERVER_URL} && -n ${RUNNER_TOKEN} && -n ${RUNNER_DESCRIPTION} && -n ${RUNNER_EXECUTOR} ]]; then
    echo "    configuration vars found, registering a new runner..."
    # register the runner
    su gitlab-runner -c \
      "gitlab-runner register --non-interactive --config '${CONFIG_FILE}' --url '${CI_SERVER_URL}' --registration-token '${RUNNER_TOKEN}' --description '${RUNNER_DESCRIPTION}' --executor '${RUNNER_EXECUTOR}'"
  else
    echo "    ERROR: no config file and no configuration vars!"
    exit 1
  fi
fi

# launch gitlab-runner passing all arguments
exec gitlab-runner "$@"
